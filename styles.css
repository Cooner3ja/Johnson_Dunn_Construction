:root {
  --clr-bg: lightcoral;
  --clr-accent: red;
  --clr-light: white;
  --clr-dark: black;
}
body {
  margin-right: auto;
  margin-left: auto;
  width: 50%; /* very low width just to test scrolling animations */
  font-family: proxima-nova, sans-serif;
  
}
/*section {
   min-height: 100vh; means 100% of viewport height, or all of screeens height minimum. Good for scaling site to screen size.
    margin-top: 40px;
    margin-bottom: 40px;
    padding: 20px;
}*/
.content {
    min-height: 100vh; /* means 100% of viewport height, or all of screeens height minimum. Good for scaling site to screen size.*/
    margin-top: 40px;
    margin-bottom: 40px;
    padding: 20px;
}

.container {
    display: flex;
    align-items: center; /* Verticle Alignment of items */

}
.heading {
    font-weight: bold;
    font-size: xx-large;
}
.text {
    margin-right: 20px; /* Spacing between image and text inside. To be used inside container class */
    font-size: x-large;
}
#navbar {
    position: fixed;
    top: 0px;
    width: 100%
}



/* animation related css */

  .uniformImg {
    width: 550px;
    height: 550px;
  }
  .btn {
    font-size: 1rem;
    font-weight: 700;
    padding: 0.5em 1em;
    color: black;
    background-color: var(--clr-bg);
    border: 5px solid var(--clr-accent);
    border-radius: 5px;
    
    

    /* Can use this or shorthand.
    #transition-property: transform;
    #transition-duration: 0.3s;
    #transition-timing-function:ease;
    #transition-delay: 0s;

    shorthand form.
    #transition: transform 0.3s ease 0s;

    even shorter, since ease and 0s are defaults for timing-function and delay. Additionally,
    more transition properties can be appended with commas seperating them */

    transition: transform 0.5s, background-color 0.3s, color 0.3s;

    /*or you can just use all property to apply animation to all
    #transition: all 0.3s;*/

  }

  .btn:hover {
    transform: translatey(+10px);
    background-color: var(--clr-accent);
    color: var(--clr-light);

  }
  /*Content Background animation*/
.backgroundAnimation {
  transition: background-color 2500ms ease 0ms;      
}
.backgroundAnimation.enter { /*.enter denotes the changes to original animation class that will be animated*/
  background-color: var(--clr-bg);
}
.backgroundAnimation.exit { /*.exit denotes the reverision of changes to original attributes, along side the timings for the exit animation*/
  background-color: var(--clr-light);
  transition: background-color 500ms ease 0ms;
}
/*Header Animation*/
.headerAnimation {
  opacity: 0;
  filter: blur(5px);
  transform: translateX(-100%);
  transition: opacity 2500ms ease 1000ms,
              filter 2500ms ease 1000ms,
              transform 2500ms ease 1000ms;
}
.headerAnimation.enter {
  opacity: 1;
  filter: blur(0);
  transform: translateX(0);
}
.headerAnimation.exit {
  opacity: 0;
  filter: blur(5px);
  transform: TranslateX(-100%);
  transition: opacity 500ms ease 0ms,
              filter 500ms ease 0ms,
              transform 500ms ease 0ms;
}
/*Text animation*/
.textAnimation {
  opacity: 0;
  filter: blur(5px);
  transform: translateX(-100%);
  transition: opacity 2500ms ease 2000ms, 
              filter 2500ms ease 2000ms, 
              transform 2500ms ease 2000ms;
}
.textAnimation.enter {
  opacity: 1;
  filter: blur(0);
  transform: translateX(0);
}
.textAnimation.exit {
  opacity: 0;
  filter: blur(5px);
  transform: TranslateX(-100%);
  transition: opacity 500ms ease 0ms,
              filter 500ms ease 0ms,
              transform 500ms ease 0ms;
}
  /*Image animation*/
  .imageAnimation {
    opacity: 0;
    filter: blur(5px);
    transform: translateX(+100%);
    transition: opacity 2500ms ease 2500ms, 
                filter 2500ms ease 2500ms, 
                transform 2500ms ease 2500ms;
  }
  .imageAnimation.enter { 
    opacity: 1;
    filter: blur(0);
    transform: translateX(0);
  } 
  .imageAnimation.exit {
    opacity: 0;
    filter: blur(5px);
    transform: translateX(100%);
    transition: opacity 500ms ease 0ms,
                filter 500ms ease 0ms,
                transform 500ms ease 0ms;
  }
